[
  {
    "id" : "f0daf4a4-c243-4a85-a393-cc83dc717d86",
    "prId" : 143,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/143#pullrequestreview-698129301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a3b42f7-4c5b-4133-8202-ec3deadf4e0f",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Nit: what happens for if `--branch=something current`?",
        "createdAt" : "2021-07-02T12:13:20Z",
        "updatedAt" : "2021-07-02T12:13:20Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "68215620-8d82-4795-9261-a1aa961a2dd6",
        "parentId" : "3a3b42f7-4c5b-4133-8202-ec3deadf4e0f",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Ok, AFAICS `current` takes precedence / `-b` is ignored... I think such combination can result in an error",
        "createdAt" : "2021-07-02T12:19:47Z",
        "updatedAt" : "2021-07-02T12:19:47Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "117ad794ce0acfee913ee234f3ddc77ee982c592",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +3176,3180 @@        Outputs name of the branch (or possibly multiple branches, in case of `down`) that is:\n\n        * `current`: the current branch; exits with a non-zero status if none (detached HEAD)\n        * `down`:    the direct children/downstream branch of the target branch.\n        * `first`:   the first downstream of the root branch of the target branch (like `root` followed by `next`), or the root branch itself if the root has no downstream branches."
  },
  {
    "id" : "82f1c5ac-a28e-478f-a5b6-921a659948a8",
    "prId" : 135,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/135#pullrequestreview-685589410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad52da1f-bfd1-4506-8b8c-bb2154fbc1ae",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Just a rename to correctly reflect what this method was doing all along",
        "createdAt" : "2021-06-16T19:51:02Z",
        "updatedAt" : "2021-06-16T19:51:02Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbe85778eadae6504fca27f1caa7ebe6015ca97e",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1123,1127 @@# Note: the 'git rev-parse --verify' validation is not performed in case for either of earlier/later\n# if the corresponding prefix is empty AND the revision is a 40 hex digit hash.\ndef is_ancestor_or_equal(\n    cli_ctxt: CommandLineContext,\n    earlier_revision: str,"
  },
  {
    "id" : "16135685-3b04-429b-931b-10c32b089cc3",
    "prId" : 135,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/135#pullrequestreview-686318552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d66252a-d3db-40a8-8e5e-cc579648b516",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "The actual change... it's suspiciously simple, I'm afraid this will backfire somehow that I can't see yet :/",
        "createdAt" : "2021-06-16T19:51:34Z",
        "updatedAt" : "2021-06-16T19:51:40Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "17b0cd89-c050-417d-b81c-c5dc13a982ea",
        "parentId" : "8d66252a-d3db-40a8-8e5e-cc579648b516",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "YOLO",
        "createdAt" : "2021-06-17T13:36:29Z",
        "updatedAt" : "2021-06-17T13:36:29Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbe85778eadae6504fca27f1caa7ebe6015ca97e",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +1691,1695 @@\ndef is_merged_to(cli_ctxt: CommandLineContext, b: str, target: str) -> bool:\n    if is_ancestor_or_equal(cli_ctxt, b, target):\n        # If branch is ancestor of or equal to the target, we need to distinguish between the\n        # case of branch being \"recently\" created from the target and the case of"
  },
  {
    "id" : "94f86a34-8fe9-4d9f-b4c6-f200da8e94c8",
    "prId" : 129,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/129#pullrequestreview-671379863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88034f87-7d47-446b-acef-861bff0e5f01",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Whoops I thought that this specific helper is already present 😯 ",
        "createdAt" : "2021-05-28T14:46:19Z",
        "updatedAt" : "2021-05-28T14:46:19Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4d3126b997f7308f424b477bb14fa1ae3ac6dfd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +949,953 @@\n# Resolve a revision identifier to a full sha\ndef full_sha(cli_ctxt: CommandLineContext, revision: str, prefix: str = \"refs/heads/\") -> Optional[str]:\n    if prefix == \"\" and is_full_sha(revision):\n        return revision"
  },
  {
    "id" : "a0118111-d2b9-4234-a928-2649a594927f",
    "prId" : 129,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/129#pullrequestreview-672447046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "576dd2be-c3f0-4b37-93af-e274f7755a4d",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "If you could expand this explanation a bit, so that the cases of 1) update 2) detection are considered separately",
        "createdAt" : "2021-05-31T16:40:29Z",
        "updatedAt" : "2021-05-31T16:40:29Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "828fa9c6-7ffb-4b75-9067-dc66fd8512ee",
        "parentId" : "576dd2be-c3f0-4b37-93af-e274f7755a4d",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "I know it's described above in docs for `traverse` itself... but still, sth similar to the above docs of `--merge` option of `status` would be useful",
        "createdAt" : "2021-05-31T16:41:25Z",
        "updatedAt" : "2021-05-31T16:41:25Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4d3126b997f7308f424b477bb14fa1ae3ac6dfd",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +3271,3275 @@              <b>-l, --list-commits</b>           When printing the status, additionally list the messages of commits introduced on each branch.\n\n              <b>-M, --merge</b>                  Update, and detect updates, by merge rather than by rebase.\n\n              <b>-n</b>                           If updating by rebase, equivalent to `--no-interactive-rebase`. If updating by merge, equivalent to `--no-edit-merge`."
  },
  {
    "id" : "23d8bb89-841f-4332-b6c5-c568ef1086f2",
    "prId" : 129,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/129#pullrequestreview-672447834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bd7f2f0-305c-440d-a443-c6d59988853c",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Pls also reflect the CLI changes in both `completion/` scripts",
        "createdAt" : "2021-05-31T16:43:14Z",
        "updatedAt" : "2021-05-31T16:43:14Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4d3126b997f7308f424b477bb14fa1ae3ac6dfd",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +3728,3732 @@            squash(cli_ctxt, cb, cli_ctxt.opt_fork_point or fork_point(cli_ctxt, cb, use_overrides=True))\n        elif cmd in (\"s\", \"status\"):\n            expect_no_param(parse_options(args, \"Ll\", [\"color=\", \"merge\", \"list-commits-with-hashes\", \"list-commits\"]))\n            read_definition_file(cli_ctxt)\n            expect_at_least_one_managed_branch()"
  },
  {
    "id" : "f09a0d86-5bb0-4968-b463-179aebe4eeb1",
    "prId" : 129,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/129#pullrequestreview-682435180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5eb43ccc-0d32-45cc-9729-9b6e4054810a",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "```suggestion\r\n            <b>Usage: git machete s[tatus] [--color=WHEN] [-l|--list-commits] [-L|--list-commits-with-hashes] [-M|--merge]</b>\r\n```\r\n\r\nbut see my comment about alternative naming for this option.",
        "createdAt" : "2021-06-13T18:35:08Z",
        "updatedAt" : "2021-06-13T18:35:09Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4d3126b997f7308f424b477bb14fa1ae3ac6dfd",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +3183,3187 @@        \"\"\",\n        \"status\": \"\"\"\n            <b>Usage: git machete s[tatus] [--color=WHEN] [-l|--list-commits] [-L|--list-commits-with-hashes] [--merge]</b>\n\n            Displays a tree-shaped status of the branches listed in the definition file."
  },
  {
    "id" : "531a8cd4-df88-431b-bdff-2589c4c80b7d",
    "prId" : 129,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/129#pullrequestreview-682446106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f685da81-be51-4d27-b16e-cc80ff3975c6",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Pls update the doc here",
        "createdAt" : "2021-06-13T18:35:27Z",
        "updatedAt" : "2021-06-13T18:35:27Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "e9a25979-297a-457a-a831-eb4612c6d5a1",
        "parentId" : "f685da81-be51-4d27-b16e-cc80ff3975c6",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Done on #133 ",
        "createdAt" : "2021-06-13T21:22:25Z",
        "updatedAt" : "2021-06-13T21:22:25Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4d3126b997f7308f424b477bb14fa1ae3ac6dfd",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +3200,3204 @@\n              - <b><dim>grey/dimmed edge</dim></b> means that the downstream branch has been <b>merged</b> to the upstream branch,\n                detected by commit equivalency via `diff-tree` (default), or by strict detection of merge commits (if `--merge` passed)\n\n"
  },
  {
    "id" : "52746400-392c-45ae-ba50-4d55a5c81a12",
    "prId" : 129,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/129#pullrequestreview-682446120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8bb0e17-ef3e-4b45-8729-0e73b3829c79",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "I've optimized this routine even more (to avoid repeated `git` invocations), feel free to fast forward your branch to my `optimize/detect-squash-caching` branch from this repo",
        "createdAt" : "2021-06-13T19:46:21Z",
        "updatedAt" : "2021-06-13T19:46:21Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "915bb644-9e33-421e-8712-947ea280b183",
        "parentId" : "c8bb0e17-ef3e-4b45-8729-0e73b3829c79",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "#132 FTW",
        "createdAt" : "2021-06-13T21:22:35Z",
        "updatedAt" : "2021-06-13T21:22:35Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4d3126b997f7308f424b477bb14fa1ae3ac6dfd",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1121,1125 @@# tree with identical contents to earlier_revision, indicating that\n# later_revision contains a rebase or squash merge of earlier_revision.\ndef contains_equivalent_tree(\n    cli_ctxt: CommandLineContext,\n    earlier_revision: str,"
  },
  {
    "id" : "bd6f7de2-4a1b-4daa-bbad-0de6418958b4",
    "prId" : 128,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/128#pullrequestreview-668071886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "053e6391-3f24-4657-9c86-565a4130ca9f",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Hmmm actually... for the UX point of view, I have a concern here: in case the rebase is interactive (so `-n` option is NOT passed), will the user be able to find out which downstream branch is currently getting rebased? 🤔 I'd just want to make sure that we don't leave the user confused with multiple rebases happening one by one",
        "createdAt" : "2021-05-24T21:03:48Z",
        "updatedAt" : "2021-05-24T21:03:48Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "af90500c-be52-443a-bfdb-d084b5759217",
        "parentId" : "053e6391-3f24-4657-9c86-565a4130ca9f",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Possibly making it similar to what happens in `git machete traverse` (so explicit questions like `Rebase branch 'foo' onto 'bar'?`) would be a good choice for slide-outs where >1 downstream is involved?",
        "createdAt" : "2021-05-24T21:05:17Z",
        "updatedAt" : "2021-05-24T21:05:17Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "9d402649-fd1d-40b2-bc69-cb41c17cfeae",
        "parentId" : "053e6391-3f24-4657-9c86-565a4130ca9f",
        "authorId" : "81211470-355e-427c-9125-d6a87ef998d6",
        "body" : "🤔 The currently experience isn't bad. The `slide_out` function prints an update message before opening the interactive rebase, so there's pretty good messaging before the rebase fires. Eg:\r\n\r\n```bash\r\nmdemo$ git machete status\r\n  main\r\n  │\r\n  └─slide_out\r\n    │\r\n    └─child_a\r\n    │\r\n    └─child_b\r\n    \r\nmdemo$ git machete slide-out\r\nRebasing child_a onto main...\r\nSuccessfully rebased and updated refs/heads/child_a.\r\nRebasing child_b onto main...\r\nSuccessfully rebased and updated refs/heads/child_b.\r\n\r\nmdemo$ git machete status\r\n  main\r\n  │\r\n  └─child_a\r\n  │\r\n  └─child_b\r\n```\r\n\r\nI don't think you want to prompt during the `slide-out` operation, because at that point the updated machete configuration has already been written. Aborting there would leave the tree in a vaguely inconsistent state that could be hard to back out from. \r\n\r\nI *personally* don't want an interactive prompt during the operation as slide-out as a primitive operation that operates on a single branch, rather than traverse which is *potentially* operating on multiple branches.\r\n\r\nIf I'm calling from the cli via `git machete slide-out` I've already looked at and selected the branch, and if it's run during a traverse then I've already been prompted to confirm the slide-out operation at a branch level before firing.",
        "createdAt" : "2021-05-24T21:37:29Z",
        "updatedAt" : "2021-05-24T21:37:29Z",
        "lastEditedBy" : "81211470-355e-427c-9125-d6a87ef998d6",
        "tags" : [
        ]
      },
      {
        "id" : "2d65fa0b-736f-41e8-90a0-1e75ef51a634",
        "parentId" : "053e6391-3f24-4657-9c86-565a4130ca9f",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Okay, you've convinced me :) let's resolve the confusion around `down-fork-point` tho ",
        "createdAt" : "2021-05-25T16:35:52Z",
        "updatedAt" : "2021-05-25T16:35:52Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9b971e1007d3f7c2ddfb309da36c5e8d855ec37",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +2020,2024 @@\n    go(cli_ctxt, new_upstream)\n    for new_downstream in new_downstreams:\n        go(cli_ctxt, new_downstream)\n        if cli_ctxt.opt_merge:"
  },
  {
    "id" : "75d51f61-cf55-4ceb-b5b0-44a6eab04306",
    "prId" : 128,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/128#pullrequestreview-669339167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2f97196-1ec6-413c-81fb-7f80517751cf",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Whooops... `--down-fork-point` option is tricky in case there's more than one downstream branch hmmm",
        "createdAt" : "2021-05-25T16:24:20Z",
        "updatedAt" : "2021-05-25T16:24:20Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "a7471806-958b-4abb-88e1-385bef5c766a",
        "parentId" : "a2f97196-1ec6-413c-81fb-7f80517751cf",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Of course it can happen that all N downstream branches have the same fork point (e.g. if they're all in sync with their parent)... but in general each of them can have a different one.",
        "createdAt" : "2021-05-25T16:25:18Z",
        "updatedAt" : "2021-05-25T16:25:18Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "2fd02c41-1442-4cfe-b285-477d62e45915",
        "parentId" : "a2f97196-1ec6-413c-81fb-7f80517751cf",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Actually, _market research_: since I'm not an avid user of `slide-out` myself (I'm sliding out during `traverse`, or via GUI from git-machete-intellij-plugin)... do you remember yourself using `--down-fork-point` frequently?",
        "createdAt" : "2021-05-25T16:26:47Z",
        "updatedAt" : "2021-05-25T16:26:48Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "610a45a4-4476-41c0-ad37-88d1db4e6127",
        "parentId" : "a2f97196-1ec6-413c-81fb-7f80517751cf",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Maybe for clarity we could just forbid using `--down-fork-point` when there's >1 downstream branch? 🤔 ",
        "createdAt" : "2021-05-25T16:28:14Z",
        "updatedAt" : "2021-05-25T16:28:14Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "1e6a7247-cd7c-4c56-92a0-c4dd02b9b30a",
        "parentId" : "a2f97196-1ec6-413c-81fb-7f80517751cf",
        "authorId" : "81211470-355e-427c-9125-d6a87ef998d6",
        "body" : "Oh, I've never actually used `--down-fork-point` and wasn't aware that it was an option.\r\nAny time the fork-point isn't properly inferred I've already configured fork-point overrides for the branch.\r\nI'd consider this \"best practices\", as it's good to verify via `git machete status -L` if there are any questions on fork points.\r\n\r\nWith this in mind, I think `--down-fork-point` seems vaguely unsafe to me.\r\nIf I'd my druthers I'd probably just remove it and enforce that fork point overrides are configured per-branch with the existing `fork-point` command before running slide out.\r\n\r\nGiven that it's possible for branches to have a common fork-point, I don't _think_ we need to disable `--down-fork-point`. \r\nPerhaps just print a warning that this is a potentially unsafe operation.\r\nHeck, maybe even just deprecate `--down-fork-point` unless you know anyone who's _actually_ using it?\r\nI could imagine the deprecation message linking back to an issue for folks to chime in if they're using it.",
        "createdAt" : "2021-05-25T17:18:19Z",
        "updatedAt" : "2021-05-25T17:18:20Z",
        "lastEditedBy" : "81211470-355e-427c-9125-d6a87ef998d6",
        "tags" : [
        ]
      },
      {
        "id" : "a563eae3-7592-4a17-98e4-3d016d2e65f2",
        "parentId" : "a2f97196-1ec6-413c-81fb-7f80517751cf",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "> Any time the fork-point isn't properly inferred I've already configured fork-point overrides for the branch.\r\n\r\nYeah, you're right, I'm actually doing that myself, `--fork-point` options of `reapply` and `update`, as well as `--down-fork-point` option of `slide-out` are a relic of the times when fork point override wasn't available yet ;)\r\n\r\n> With this in mind, I think --down-fork-point seems vaguely unsafe to me.\r\n\r\nI agree, even more so now that you point that out 😅\r\n\r\n> Given that it's possible for branches to have a common fork-point, I don't think we need to disable --down-fork-point.\r\n\r\nOk, let's leave the option as is, it's obscure but still _theoretically useful_ so I think it can stay as is. \r\n\r\nSo maybe so that you don't spend more effort than it's really worth: what if you just rephrase the help for `--down-fork-point` option in `slide-out`'s help so that it reflects the new behavior correctly?",
        "createdAt" : "2021-05-26T14:21:50Z",
        "updatedAt" : "2021-05-26T14:22:02Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "36014aa6-7482-4da6-bec2-a8a1fa19c326",
        "parentId" : "a2f97196-1ec6-413c-81fb-7f80517751cf",
        "authorId" : "81211470-355e-427c-9125-d6a87ef998d6",
        "body" : "Done, updated existing doc and added reference to `git machete fork-point` as an preferred alternative.",
        "createdAt" : "2021-05-26T17:22:28Z",
        "updatedAt" : "2021-05-26T17:22:28Z",
        "lastEditedBy" : "81211470-355e-427c-9125-d6a87ef998d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9b971e1007d3f7c2ddfb309da36c5e8d855ec37",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +3073,3077 @@                  add-notification\n            </dim>\n            and `change-table` and `add-notification` will be rebased onto develop (fork point for this rebase is configurable, see `-d` option below).\n\n            Note: This command doesn't delete any branches from git, just removes them from the tree of branch dependencies."
  },
  {
    "id" : "0a2fe8e8-48a0-452a-aaaa-174527954f57",
    "prId" : 128,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/128#pullrequestreview-668061711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59de87f5-88da-4382-a0c0-dda0c5291bd0",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "See comment about `down_fork_point` below 🤔 ",
        "createdAt" : "2021-05-25T16:27:39Z",
        "updatedAt" : "2021-05-25T16:27:40Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9b971e1007d3f7c2ddfb309da36c5e8d855ec37",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +2027,2031 @@        else:\n            print(f\"Rebasing {bold(new_downstream)} onto {bold(new_upstream)}...\")\n            rebase(cli_ctxt, f\"refs/heads/{new_upstream}\", cli_ctxt.opt_down_fork_point or fork_point(cli_ctxt, new_downstream, use_overrides=True), new_downstream)\n\n"
  },
  {
    "id" : "3d25ce52-a4c2-4be1-a217-35379b5d9249",
    "prId" : 125,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/125#pullrequestreview-611748478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42d93431-85d1-43b0-9241-4328c7088eec",
        "parentId" : null,
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : ":+1: ",
        "createdAt" : "2021-03-14T23:01:22Z",
        "updatedAt" : "2021-03-15T20:12:15Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cdeb01903b6f9ecaae834cb25f81b9371d5bcec",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +2728,2732 @@            If multiple arguments are passed to the command, they are concatenated with a single space.\n\n            Note: all the effects of `anno` can be always achieved by manually editing the definition file.\n\n            <b>Options:</b>"
  },
  {
    "id" : "71bc351d-a374-49d7-baa1-677c63e506fb",
    "prId" : 123,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/123#pullrequestreview-611736790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e152947b-dbba-407a-875b-d970ccd32bc3",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "This could be a `@dataclass`... but AFAICS it's only supported since Python 3.7 without adding any extra dependency on some backport library :/",
        "createdAt" : "2021-03-14T12:34:02Z",
        "updatedAt" : "2021-03-14T12:34:03Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "a3223424-3a31-4230-b7ab-bfcfd983582c",
        "parentId" : "e152947b-dbba-407a-875b-d970ccd32bc3",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "Yeah, I thought about it but I share your concerns too",
        "createdAt" : "2021-03-14T20:56:33Z",
        "updatedAt" : "2021-03-14T20:56:33Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a435e0bb3e8aff7f59dfb7e925bc6ad80d70254",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +119,123 @@\nclass CommandLineContext:\n    def __init__(self) -> None:\n        self.opt_as_root: bool = False\n        self.opt_branch: Optional[str] = None"
  },
  {
    "id" : "181597d4-958d-4c7b-8336-c41fef0b0817",
    "prId" : 109,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/109#pullrequestreview-589331479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a107e44-54a1-4842-8fe3-66b8697bdffa",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "I think this changeset can be merged as a self-contained PR, and other planned changes can go on separate PRs",
        "createdAt" : "2021-02-12T10:20:43Z",
        "updatedAt" : "2021-03-05T09:06:07Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b762c7895e6b5dc32f56d6696b8c13361c1ce62",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +118,122 @@\n\nclass CommandLineContext:\n    opt_as_root: bool = False\n    opt_branch: Optional[str] = None"
  },
  {
    "id" : "4310f012-d353-4bae-a984-755e84bd7fd0",
    "prId" : 109,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/109#pullrequestreview-589374678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b173632-939c-472d-b7da-7b89b7ab125d",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Probably most of these methods will require all other contexts to be passed as arguments as well... ",
        "createdAt" : "2021-02-12T10:23:49Z",
        "updatedAt" : "2021-03-05T09:06:07Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "9244fecc-0a76-4f8b-b485-71e937e11eec",
        "parentId" : "6b173632-939c-472d-b7da-7b89b7ab125d",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Maybe wrapping then into single unified `Context` with `cli`/`machete`/`git` etc. fields won't be a bad idea",
        "createdAt" : "2021-02-12T10:24:25Z",
        "updatedAt" : "2021-03-05T09:06:07Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "a5d8469b-a7ad-446d-9242-9060c982967d",
        "parentId" : "6b173632-939c-472d-b7da-7b89b7ab125d",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "sounds good but let's leave the more specific name for now since the other context will be added on the separate PR(s)",
        "createdAt" : "2021-02-12T11:20:49Z",
        "updatedAt" : "2021-03-05T09:06:07Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b762c7895e6b5dc32f56d6696b8c13361c1ce62",
    "line" : 2163,
    "diffHunk" : "@@ -1,1 +2398,2402 @@\n\ndef status(cli_ctxt: CommandLineContext, warn_on_yellow_edges: bool) -> None:\n    dfs_res = []\n"
  },
  {
    "id" : "04954f0c-b5c0-4bac-b2a8-02f609b13d1d",
    "prId" : 108,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/108#pullrequestreview-589291721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0add8327-d707-4768-a6bd-453f34412893",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Whoops no syntax for declaring iterator variable type inside of `for`?... like `for b: str in ...`?",
        "createdAt" : "2021-02-12T09:23:18Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "1f4ebbcd-6116-4cd5-b951-05e7f2975ec3",
        "parentId" : "0add8327-d707-4768-a6bd-453f34412893",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "unfortunately :c that's the only way",
        "createdAt" : "2021-02-12T09:27:38Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7afc223e47e31c461d5521269c76eb259914d77a",
    "line" : 1565,
    "diffHunk" : "@@ -1,1 +2158,2162 @@\n    b: str\n    for b in itertools.dropwhile(lambda x: x != cb, managed_branches):\n        u = up_branch.get(b)\n"
  },
  {
    "id" : "20e70202-e9e1-4802-b8be-6b954a91c8e4",
    "prId" : 108,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/108#pullrequestreview-589360531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6d2e332-485c-4eee-8d88-74b162516435",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Btw, does mypy warn about potentially None values properly (like Kotlin/Checker Framework does)? or does it give a free pass on dereferencing None values (like Java/Scala)?",
        "createdAt" : "2021-02-12T09:27:24Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "18cb9028-1e42-45d4-9231-f34de80a8ef3",
        "parentId" : "a6d2e332-485c-4eee-8d88-74b162516435",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "https://mypy.readthedocs.io/en/stable/command_line.html#none-and-optional-handling\r\n\r\n> `--no-implicit-optional`\r\nThis flag causes mypy to stop treating arguments with a None default value as having an implicit Optional type.\r\n>\r\n> For example, by default mypy will assume that the x parameter is of type Optional[int] in the code snippet below since the default parameter is None:\r\n> ```\r\n> def foo(x: int = None) -> None:\r\n>     print(x)\r\n> ```\r\n>If this flag is set, the above snippet will no longer type check: we must now explicitly indicate that the type is Optional[int]:\r\n>\r\n> ```\r\n> def foo(x: Optional[int] = None) -> None:\r\n>     print(x)\r\n> ```",
        "createdAt" : "2021-02-12T09:31:24Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      },
      {
        "id" : "1f940252-9e09-40a1-aeb8-a611b0b13ec0",
        "parentId" : "a6d2e332-485c-4eee-8d88-74b162516435",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "whoops, N/A \r\nit is already used",
        "createdAt" : "2021-02-12T09:32:51Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      },
      {
        "id" : "58940ae5-1b15-4b3f-9524-62b96d685393",
        "parentId" : "a6d2e332-485c-4eee-8d88-74b162516435",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "however turning `stirct-optional` on results with about 70 errors like that:\r\n```\r\n➜  git-machete git:(refactor/mypy) ✗ mypy --config-file mypy.ini git_machete\r\ngit_machete/cmd.py:355: error: Argument 1 to \"len\" has incompatible type \"Optional[str]\"; expected \"Sized\"\r\ngit_machete/cmd.py:356: error: Unsupported operand types for * (\"None\" and \"int\")\r\ngit_machete/cmd.py:356: note: Left operand is of type \"Optional[str]\"\r\ngit_machete/cmd.py:359: error: Item \"None\" of \"Optional[str]\" has no attribute \"__iter__\" (not iterable)\r\ngit_machete/cmd.py:430: error: Unsupported operand types for * (\"int\" and \"None\")\r\ngit_machete/cmd.py:430: note: Right operand is of type \"Optional[str]\"\r\n...\r\n```",
        "createdAt" : "2021-02-12T09:34:21Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      },
      {
        "id" : "204a8657-289c-42fd-bc2b-dc746125ce02",
        "parentId" : "a6d2e332-485c-4eee-8d88-74b162516435",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "In particular, this is the warning you asked for \r\n```\r\ngit_machete/cmd.py:1775: error: Argument 1 to \"commit_sha_by_revision\" has incompatible type \"Optional[str]\"; expected \"str\"\r\n```",
        "createdAt" : "2021-02-12T09:35:46Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      },
      {
        "id" : "6bbc02f6-b8d1-4ddb-9917-174a95a68bfc",
        "parentId" : "a6d2e332-485c-4eee-8d88-74b162516435",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Whoops okay so pls add an issue for enabling strict-optional one day",
        "createdAt" : "2021-02-12T09:38:17Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "2a339ca4-ee1c-4b01-985d-18c018275893",
        "parentId" : "a6d2e332-485c-4eee-8d88-74b162516435",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : " created #118 ",
        "createdAt" : "2021-02-12T11:00:35Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7afc223e47e31c461d5521269c76eb259914d77a",
    "line" : 1399,
    "diffHunk" : "@@ -1,1 +1796,1800 @@\n\ndef get_overridden_fork_point(b: str) -> Optional[str]:\n    override_data = get_fork_point_override_data(b)\n    if not override_data:"
  },
  {
    "id" : "b3d00397-43d9-4578-9608-22efff7cb9b7",
    "prId" : 108,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/108#pullrequestreview-589357974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1e66709-5f18-40f0-ada5-4bdbd7d1a994",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Actually... is there any easy mypy-supported way to define an enum here?",
        "createdAt" : "2021-02-12T09:59:09Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "d7459c2d-ec45-471b-92e3-aa94df3c40a2",
        "parentId" : "e1e66709-5f18-40f0-ada5-4bdbd7d1a994",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "I think it could be handled like this:\r\nhttps://stackoverflow.com/questions/52624736/type-annotations-for-enum-value\r\n\r\nbut let's leave it for another PR (since a bunch of renames will be involved)\r\n",
        "createdAt" : "2021-02-12T10:10:13Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      },
      {
        "id" : "c423e3e7-3b33-40b0-86e4-595f75e54563",
        "parentId" : "e1e66709-5f18-40f0-ada5-4bdbd7d1a994",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "created https://github.com/VirtusLab/git-machete/issues/117",
        "createdAt" : "2021-02-12T10:57:03Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7afc223e47e31c461d5521269c76eb259914d77a",
    "line" : 1102,
    "diffHunk" : "@@ -1,1 +1309,1313 @@\n\ndef get_relation_to_remote_counterpart(b: str, rb: str) -> int:\n    b_is_anc_of_rb = is_ancestor(b, rb, later_prefix=\"refs/remotes/\")\n    rb_is_anc_of_b = is_ancestor(rb, b, earlier_prefix=\"refs/remotes/\")"
  },
  {
    "id" : "e70c137b-b33f-47f7-b6b6-c083627c757f",
    "prId" : 108,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/108#pullrequestreview-589531106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "583e1f43-42e9-4eef-ba38-e37c4c758da3",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "namespace or enum? 🤔 or is \"namespace\" a word for enum?",
        "createdAt" : "2021-02-12T14:24:31Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "26b5dedd-8bbe-4e81-a4ba-22ad1cbf5a2c",
        "parentId" : "583e1f43-42e9-4eef-ba38-e37c4c758da3",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "possibly my bad wording. I meant that after the changes it will be something like `SYNC_STATUS(what I meant to be the \"namespace\").UNTRACKED`",
        "createdAt" : "2021-02-12T14:47:10Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7afc223e47e31c461d5521269c76eb259914d77a",
    "line" : 1093,
    "diffHunk" : "@@ -1,1 +1299,1303 @@\n\n# TODO (#117): extract to namespace, use mypy\nNO_REMOTES = 0\nUNTRACKED = 1"
  },
  {
    "id" : "db84853a-31d4-4690-af13-a346155fecb3",
    "prId" : 108,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/108#pullrequestreview-590299377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "717405e4-1833-4ea6-8cbd-45d55f2797cd",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Actually... why `kwargs` are `Dict[str, str]` but `args` are `str` and not `List[Str]`? 🤔 ",
        "createdAt" : "2021-02-13T19:24:07Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "7d24356e-d37b-4652-830e-a8bbc0c520af",
        "parentId" : "717405e4-1833-4ea6-8cbd-45d55f2797cd",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "That seems inconsistent...",
        "createdAt" : "2021-02-13T19:24:17Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "8046b007-1e3e-4632-b0a0-7a62b9401fbf",
        "parentId" : "717405e4-1833-4ea6-8cbd-45d55f2797cd",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "Results of `mypy` while annotating `kwargs` as `str`:\r\n```\r\n➜  git-machete git:(refactor/mypy) ✗ mypy --config-file mypy.ini git_machete\r\ngit_machete/cmd.py:274: error: Need type annotation for 'env'\r\ngit_machete/cmd.py:276: error: Item \"str\" of \"Union[str, Dict[Any, Any]]\" has no attribute \"items\"\r\ngit_machete/cmd.py:283: error: Argument 4 to \"cmd_shell_repr\" has incompatible type \"**Dict[str, Dict[str, str]]\"; expected \"str\"\r\ngit_machete/cmd.py:290: error: Argument 4 to \"cmd_shell_repr\" has incompatible type \"**Dict[str, Dict[str, str]]\"; expected \"str\"\r\n```\r\n\r\nResults of `mypy` while annotating `args` as `List[str]`:\r\n```\r\n➜  git-machete git:(refactor/mypy) ✗ mypy --config-file mypy.ini git_machete\r\ngit_machete/cmd.py:220: error: Argument 2 to \"cmd_shell_repr\" has incompatible type \"*Tuple[str, ...]\"; expected \"List[str]\"\r\ngit_machete/cmd.py:241: error: Argument 2 to \"cmd_shell_repr\" has incompatible type \"*Tuple[str, ...]\"; expected \"List[str]\"\r\ngit_machete/cmd.py:277: error: Argument 1 to \"map\" has incompatible type \"Callable[[str], str]\"; expected \"Callable[[List[str]], str]\"\r\ngit_machete/cmd.py:283: error: Argument 2 to \"cmd_shell_repr\" has incompatible type \"str\"; expected \"List[str]\"\r\ngit_machete/cmd.py:283: error: Argument 3 to \"cmd_shell_repr\" has incompatible type \"*Tuple[str, ...]\"; expected \"List[str]\"\r\ngit_machete/cmd.py:290: error: Argument 2 to \"cmd_shell_repr\" has incompatible type \"str\"; expected \"List[str]\"\r\ngit_machete/cmd.py:290: error: Argument 3 to \"cmd_shell_repr\" has incompatible type \"*Tuple[str, ...]\"; expected \"List[str]\"\r\n```\r\n---\r\n\r\n\r\nSpecifying the type of `*args` tells us what EACH \"arg\" is.\r\nIf we use `str` then each of them is a string.\r\nIf we use `List[str]` then they are all to be a list of strings.\r\n\r\nThe same for `kwargs`.\r\n\r\nIn our case, the \"kwarg\" is not a type of `str`. It is `Dict[str, str]`.\r\nWhy? See how we use it (the type of `kwargs.get`)...\r\n```\r\nenv: Dict[str, str] = kwargs.get(\"env\", {})\r\n    # ...\r\n    env_repr = [k + \"=\" + shell_escape(v) for k, v in env.items() if k not in os.environ]\r\n```\r\n\r\n\r\n--- \r\n\r\nRefs: \r\nhttps://www.python.org/dev/peps/pep-0484/#arbitrary-argument-lists-and-default-argument-values\r\nhttps://stackoverflow.com/questions/37031928/type-annotations-for-args-and-kwargs",
        "createdAt" : "2021-02-15T08:27:55Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      },
      {
        "id" : "a782dbf0-f0e9-4162-a4e5-05cfbc3ba9f7",
        "parentId" : "717405e4-1833-4ea6-8cbd-45d55f2797cd",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Aww crap I forgot about this `env` thing 🤦🏻 ",
        "createdAt" : "2021-02-15T09:31:20Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "b9f09017-46cd-4c2c-8b96-bd57f9f1c0ab",
        "parentId" : "717405e4-1833-4ea6-8cbd-45d55f2797cd",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "There might be different `str`-typed params in the future (or maybe they were in the past?) but yeah, `Dict[str, str]` FTW as for now",
        "createdAt" : "2021-02-15T09:32:32Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "7afc223e47e31c461d5521269c76eb259914d77a",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +263,267 @@\n\ndef cmd_shell_repr(cmd: str, *args: str, **kwargs: Dict[str, str]) -> str:\n    def shell_escape(arg: str) -> str:\n        return arg.replace(\"(\", \"\\\\(\") \\"
  },
  {
    "id" : "ba20e6cb-8615-4063-b729-8fc6826012cc",
    "prId" : 108,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/108#pullrequestreview-589989844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "106cbe23-491f-4337-a895-d32e9c5c1bc9",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Whoops I'm afraid this might be passing only coz `kwargs` are never actually provided to `run_git`...",
        "createdAt" : "2021-02-13T19:25:59Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "7afc223e47e31c461d5521269c76eb259914d77a",
    "line" : 278,
    "diffHunk" : "@@ -1,1 +277,281 @@\n\ndef run_git(git_cmd: str, *args: str, **kwargs: Dict[str, str]) -> int:\n    exit_code = run_cmd(\"git\", git_cmd, *args, **kwargs)\n    if not kwargs.get(\"allow_non_zero\") and exit_code != 0:"
  },
  {
    "id" : "a4e9073e-ad76-49d1-bfa7-194399aba4f2",
    "prId" : 108,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/108#pullrequestreview-590251817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd16401b-921c-477a-9710-2333232db8b9",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Same here... I changed one invocation to `popen_git(\"version\", foo=\"bar\")`... and received error:\r\n\r\n`git_machete/cmd.py:698: error: Argument \"foo\" to \"popen_git\" has incompatible type \"str\"; expected \"Dict[str, str]\"`",
        "createdAt" : "2021-02-13T19:26:44Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "70ae7649-f264-4521-a98d-2335afe3dd77",
        "parentId" : "bd16401b-921c-477a-9710-2333232db8b9",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "So I guess the type of `kwargs` is really supposed to mean \"type of each kwarg\", not \"type of the collection of all kwargs\"",
        "createdAt" : "2021-02-13T19:39:38Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "b1c89515-f56a-408a-9ec6-5c8a9b8e20cb",
        "parentId" : "bd16401b-921c-477a-9710-2333232db8b9",
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : "> Same here... I changed one invocation to `popen_git(\"version\", foo=\"bar\")`... and received error:\r\n> \r\n> `git_machete/cmd.py:698: error: Argument \"foo\" to \"popen_git\" has incompatible type \"str\"; expected \"Dict[str, str]\"`\r\n\r\nAnd this is fine since the type is for each of the \"kwargs\" and we want it to be a `Dict`.\r\nSee my comment above and look close to what happens with `kwargs` and what is the type of its values later.",
        "createdAt" : "2021-02-15T08:33:24Z",
        "updatedAt" : "2021-03-05T07:09:46Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7afc223e47e31c461d5521269c76eb259914d77a",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +284,288 @@\n\ndef popen_git(git_cmd: str, *args: str, **kwargs: Dict[str, str]) -> str:\n    exit_code, stdout, stderr = popen_cmd(\"git\", git_cmd, *args, **kwargs)\n    if not kwargs.get(\"allow_non_zero\") and exit_code != 0:"
  },
  {
    "id" : "aa1eb290-1581-40de-9077-6d4d41a690de",
    "prId" : 104,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/104#pullrequestreview-491760505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef7b926b-04ee-484a-b351-b93fd9f367e5",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "I think we can just revert to pre-2.15.5 approach in this specific case. 2.15.4 would just assign an empty list `[]` to `roots`. Roots will be discovered on the fly, see lines ~1530 below:\r\n\r\n```python\r\n            debug(\"discover_tree()\", \"inferred no upstream for %s, attaching %s as a new root\\n\" % (b, b))\r\n            roots += [b]\r\n```",
        "createdAt" : "2020-09-18T20:20:22Z",
        "updatedAt" : "2020-09-18T20:26:26Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "a1da9eb6-18dd-41bb-ad63-884c95845281",
        "parentId" : "ef7b926b-04ee-484a-b351-b93fd9f367e5",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "So no need to raise an exception",
        "createdAt" : "2020-09-18T20:20:37Z",
        "updatedAt" : "2020-09-18T20:26:26Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "659f4efa-a9dd-4502-b2c2-9a725cad220a",
        "parentId" : "ef7b926b-04ee-484a-b351-b93fd9f367e5",
        "authorId" : "ed3353b1-953c-4139-9cf5-be7bb8a84887",
        "body" : "That seems like the best solution indeed, didn't notice that the roots are added later so it is ok to start with an empty list.",
        "createdAt" : "2020-09-18T20:26:18Z",
        "updatedAt" : "2020-09-18T20:26:26Z",
        "lastEditedBy" : "ed3353b1-953c-4139-9cf5-be7bb8a84887",
        "tags" : [
        ]
      }
    ],
    "commit" : "595e5bc2d54d753aa0a02cc0308c2a18b0843774",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1480,1484 @@    elif \"develop\" in local_branches():\n        roots = [\"develop\"]\n    else:\n        roots = []\n    down_branches = {}"
  },
  {
    "id" : "be9e0992-cd51-499d-baab-855732e8a27e",
    "prId" : 92,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/92#pullrequestreview-431659677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c4f217d-3d7b-4d0f-bcfd-79c095fa07e2",
        "parentId" : null,
        "authorId" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "body" : ":+1: ",
        "createdAt" : "2020-06-16T15:59:18Z",
        "updatedAt" : "2020-06-24T09:20:35Z",
        "lastEditedBy" : "41b4ba0c-1392-4965-917b-176c167b621c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4775d345e6eb2b573f5eeb37f33fbd44241fc318",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +2466,2470 @@            Opens an editor and lets you edit the definition file manually.\n\n            The editor is determined by checking up the following locations:\n            * `$GIT_MACHETE_EDITOR`\n            * `$GIT_EDITOR`"
  },
  {
    "id" : "ad2aa8fe-b606-449c-9fb2-0a72ea7dfb59",
    "prId" : 58,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/58#pullrequestreview-284544490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "059ca9bd-a701-4867-8bcf-2178c06f715f",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Pls update bash&zsh completion scripts in `completion/`",
        "createdAt" : "2019-09-05T21:13:09Z",
        "updatedAt" : "2019-09-09T11:04:39Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae9bedb7788e71ab1fe1c54ce707b8e93870b51f",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +1816,1820 @@\n        for opt, arg in opts:\n            if opt == \"--color\":\n                opt_color = arg\n            elif opt in (\"-d\", \"--down-fork-point\"):"
  },
  {
    "id" : "cfdcce8d-e052-49ee-8592-d494477bd42b",
    "prId" : 58,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/58#pullrequestreview-284552766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d16f7cd-218b-4c41-b57e-fc6322253c4e",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Pls check if all this stuff (esp. wrt. unicode characters) works as expected under both Python 2.7 and 3.6",
        "createdAt" : "2019-09-05T21:29:15Z",
        "updatedAt" : "2019-09-09T11:04:39Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae9bedb7788e71ab1fe1c54ce707b8e93870b51f",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +53,57 @@\ndef vertical_bar():\n    return u\"│\" if not ascii_only else \"|\"\n\n"
  },
  {
    "id" : "e5dc7bab-6218-4fa6-85af-420921ae9ec3",
    "prId" : 58,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/58#pullrequestreview-284553526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaad260c-2647-411d-9c91-eba9772a17a3",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Is it now consistent with the help for `status` which says that value for `--color` is optional?",
        "createdAt" : "2019-09-05T21:30:55Z",
        "updatedAt" : "2019-09-09T11:04:39Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae9bedb7788e71ab1fe1c54ce707b8e93870b51f",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +2021,2025 @@        elif cmd in (\"s\", \"status\"):\n            expect_no_param(parse_options(args, \"l\", [\"list-commits\", \"color=\"]))\n            if opt_color not in (\"always\", \"auto\", \"never\"):\n                raise MacheteException(\"Invalid argument for: --color. Valid arguments: always|auto|never.\")\n            else:"
  },
  {
    "id" : "c6a67ff8-1c4f-41bd-9a59-607d3e80e2c5",
    "prId" : 58,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/58#pullrequestreview-284556651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48ad207d-680e-4255-9e5b-d61e76c8816e",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "I think there's still at least one place where a color (`YELLOW` specifically) is used in the old concatenated manner (hook executability check)... pls do a `grep` or whatnot across the file for other possible instances",
        "createdAt" : "2019-09-05T21:38:18Z",
        "updatedAt" : "2019-09-09T11:04:39Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae9bedb7788e71ab1fe1c54ce707b8e93870b51f",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +48,52 @@\n\ndef colored(s, color):\n    return color + s + ENDC if not ascii_only else s\n"
  },
  {
    "id" : "50fd5000-7139-4399-bafe-6bdb6c9211dd",
    "prId" : 58,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/58#pullrequestreview-284807436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3514b721-3db2-4a03-85e6-95c88a082961",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "I'd move it after the following paragraph (`Note: in practice, ...`)",
        "createdAt" : "2019-09-06T11:32:47Z",
        "updatedAt" : "2019-09-09T11:04:39Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae9bedb7788e71ab1fe1c54ce707b8e93870b51f",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +1708,1712 @@            Grey edge suggests that the downstream branch can be slid out.\n\n            Using colors can be disabled with a '--color' flag set to 'never'. With '--color=always' git machete always emits colors and with '--color=auto' it emits colors only when standard output\n            is connected to a terminal. '--color=auto' is the default. When colors are disabled, relation between branches is representend in the following way:\n            |"
  },
  {
    "id" : "f8521bfd-77cb-49fa-8243-62217ce22940",
    "prId" : 57,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/57#pullrequestreview-282896563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25119c11-1428-4e89-b571-b05fa6411d2f",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Mostl likely `get_git_dir` in the current form won't be necessary anymore now that we have this function",
        "createdAt" : "2019-08-30T13:58:45Z",
        "updatedAt" : "2019-09-03T13:33:30Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "e8c642b5-fc57-47de-89e5-93a2863fa985",
        "parentId" : "25119c11-1428-4e89-b571-b05fa6411d2f",
        "authorId" : "d94ee7d8-d835-40a7-a62a-a3d0daf147a9",
        "body" : "It turned out to be quite useful in a new implementation.",
        "createdAt" : "2019-09-03T10:08:04Z",
        "updatedAt" : "2019-09-03T13:33:30Z",
        "lastEditedBy" : "d94ee7d8-d835-40a7-a62a-a3d0daf147a9",
        "tags" : [
        ]
      },
      {
        "id" : "adcc6271-09e1-497a-8455-e74082d4d662",
        "parentId" : "25119c11-1428-4e89-b571-b05fa6411d2f",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Pls reconsider given the recent comments :)",
        "createdAt" : "2019-09-03T10:20:52Z",
        "updatedAt" : "2019-09-03T13:33:30Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e39b17431a9d496eae280febe850bcea5b324a4",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +415,419 @@\n\ndef get_abs_git_dir():\n    global abs_git_dir\n    if not abs_git_dir:"
  },
  {
    "id" : "ed86ae3f-6c0c-4013-b02a-746142f8f795",
    "prId" : 50,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/50#pullrequestreview-236304049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "372a19b6-52f6-402e-8a9e-95f26d7756cd",
        "parentId" : null,
        "authorId" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "body" : "Nice trick :+1: ",
        "createdAt" : "2019-05-08T05:49:04Z",
        "updatedAt" : "2019-05-10T20:27:04Z",
        "lastEditedBy" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "tags" : [
        ]
      },
      {
        "id" : "171b53d7-82b7-4517-a543-0af70093bda6",
        "parentId" : "372a19b6-52f6-402e-8a9e-95f26d7756cd",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Yeah, that's what stackoverflow adviced to emulate tuple unpacking in lambdas under Python 3... since this feature is gone :(",
        "createdAt" : "2019-05-10T20:40:58Z",
        "updatedAt" : "2019-05-10T20:40:58Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "e33cb559324f40d776526616f2986b2df7c83ab8",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +45,49 @@\n\ndef star(f):  # tuple unpacking in lambdas\n    return lambda args: f(*args)\n"
  },
  {
    "id" : "e846f16b-c991-4732-a695-71c2f8468852",
    "prId" : 41,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/41#pullrequestreview-234567023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecd6950f-b3ea-47a4-97ee-638eb6c4da16",
        "parentId" : null,
        "authorId" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "body" : "This should be handled in a bit different way. It looks very bash'y way.",
        "createdAt" : "2019-05-07T06:27:41Z",
        "updatedAt" : "2019-05-07T14:45:18Z",
        "lastEditedBy" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "tags" : [
        ]
      },
      {
        "id" : "57516318-4b1f-4110-b7fd-556ee9d711b8",
        "parentId" : "ecd6950f-b3ea-47a4-97ee-638eb6c4da16",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Yes, I'm aware of how much mess with globals I made in this script :D there's a task to tidy up all that (#27)",
        "createdAt" : "2019-05-07T14:51:43Z",
        "updatedAt" : "2019-05-07T14:51:44Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      }
    ],
    "commit" : "81ac769f3e13b3b00599360ee88f9a872ed4a67d",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +858,862 @@\ndef flush():\n    global branch_defs_by_sha_in_reflog, initial_log_shas_cached, remaining_log_shas_cached, remote_tracking_branches_cached, sha_by_revision_cached\n    branch_defs_by_sha_in_reflog = None\n    initial_log_shas_cached = {}"
  },
  {
    "id" : "44bc0b33-61d9-4b55-a52a-9e69702cc6ec",
    "prId" : 41,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/41#pullrequestreview-234327814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b188885e-dd0e-4fde-b20c-c9538cbe0d95",
        "parentId" : null,
        "authorId" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "body" : "Nice!",
        "createdAt" : "2019-05-07T06:28:21Z",
        "updatedAt" : "2019-05-07T14:45:18Z",
        "lastEditedBy" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "tags" : [
        ]
      }
    ],
    "commit" : "81ac769f3e13b3b00599360ee88f9a872ed4a67d",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +902,906 @@        return\n\n    message = {\n        IN_SYNC_WITH_REMOTE:\n            \"Branch %s is untracked, but its remote counterpart candidate \""
  },
  {
    "id" : "98af7d3f-5339-4af5-8d5c-defe319b11f4",
    "prId" : 13,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/13#pullrequestreview-199921243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83193e5f-fadc-4ab7-aa4e-df0b4b7905c9",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Pls bump the version to 2.8.6 since only no externally affecting changes were done, only the internal ones",
        "createdAt" : "2019-02-02T14:37:02Z",
        "updatedAt" : "2019-02-23T06:23:58Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "9fe03b95-a8fb-4b16-a3e3-3c116236dc82",
        "parentId" : "83193e5f-fadc-4ab7-aa4e-df0b4b7905c9",
        "authorId" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "body" : "Do you mean, rebase on latest master?\r\n\r\nThere is no `v2.8.6` in releases: https://github.com/VirtusLab/git-machete/releases\r\n\r\nI assume that rebase on `master`.",
        "createdAt" : "2019-02-02T17:49:20Z",
        "updatedAt" : "2019-02-23T06:23:59Z",
        "lastEditedBy" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "tags" : [
        ]
      },
      {
        "id" : "f6086c82-370e-4cf1-aba1-5bf05abae660",
        "parentId" : "83193e5f-fadc-4ab7-aa4e-df0b4b7905c9",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Oh sorry, I just meant increasing the version number here in cmd.py, could you pls? In case of any issues it's important to know if people had the original 2.8.5 or the updated version built after your PR is merged",
        "createdAt" : "2019-02-04T18:55:55Z",
        "updatedAt" : "2019-02-23T06:23:59Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "e585eb92-4e4d-47e8-87d8-f07c755c330c",
        "parentId" : "83193e5f-fadc-4ab7-aa4e-df0b4b7905c9",
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Pls also add an entry in RELEASE_NOTES.md",
        "createdAt" : "2019-02-04T18:57:13Z",
        "updatedAt" : "2019-02-23T06:23:59Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "ad89af12-01cb-4c21-b703-9507b101b4d6",
        "parentId" : "83193e5f-fadc-4ab7-aa4e-df0b4b7905c9",
        "authorId" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "body" : "Ah, this way, ok, thx!",
        "createdAt" : "2019-02-05T05:41:02Z",
        "updatedAt" : "2019-02-23T06:23:59Z",
        "lastEditedBy" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c48daff2a37e2b4ade03abdd6cfe4186333c024",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +31,35 @@RED = '\\033[91m'\n\n\ndef bold(s):\n    return BOLD + s + ENDC"
  },
  {
    "id" : "04812b97-f8e8-43eb-8a6b-cd8a422d1902",
    "prId" : 13,
    "prUrl" : "https://github.com/VirtusLab/git-machete/pull/13#pullrequestreview-202856421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f343f91-66c5-4fa1-a044-6f51b8db8c42",
        "parentId" : null,
        "authorId" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "body" : "Pls re-bump the version to 2.8.6 above",
        "createdAt" : "2019-02-11T22:03:16Z",
        "updatedAt" : "2019-02-23T06:23:59Z",
        "lastEditedBy" : "b5252314-e8a4-469f-9757-eea0b16d5c36",
        "tags" : [
        ]
      },
      {
        "id" : "2125b099-af7a-4f17-93fb-0d03c6224e86",
        "parentId" : "8f343f91-66c5-4fa1-a044-6f51b8db8c42",
        "authorId" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "body" : "OK.",
        "createdAt" : "2019-02-12T19:14:46Z",
        "updatedAt" : "2019-02-23T06:23:59Z",
        "lastEditedBy" : "0dbf0923-541c-456b-9b43-6cc861fdf51c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c48daff2a37e2b4ade03abdd6cfe4186333c024",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +31,35 @@RED = '\\033[91m'\n\n\ndef bold(s):\n    return BOLD + s + ENDC"
  }
]